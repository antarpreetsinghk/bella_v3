version: '3.8'

services:
  app:
    build: .
    container_name: bella-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite+aiosqlite:///./data/bella.db
      - REDIS_URL=redis://redis:6379/0
      - AWS_DEFAULT_REGION=ca-central-1
      - SECRETS_MANAGER_SECRET_ID=bella-env-82YlZa
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bella-network

  redis:
    image: redis:7-alpine
    container_name: bella-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - bella-network

  nginx:
    image: nginx:alpine
    container_name: bella-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - bella-network

volumes:
  redis_data:
    driver: local

networks:
  bella-network:
    driver: bridge
version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: bella-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: bella_db
      POSTGRES_USER: bella_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-bella_secure_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bella_user -d bella_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bella-network

  app:
    image: 291878986264.dkr.ecr.ca-central-1.amazonaws.com/bella-v3:latest
    container_name: bella-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://bella_user:${POSTGRES_PASSWORD:-bella_secure_password_2024}@db:5432/bella_db
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=bella_db
      - POSTGRES_USER=bella_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-bella_secure_password_2024}
      - REDIS_URL=redis://redis:6379/0
      - AWS_DEFAULT_REGION=ca-central-1
      - SECRETS_MANAGER_SECRET_ID=bella-env-82YlZa
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - APP_ENV=testing
      - FORCE_REBUILD=f64ed22
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bella-network

  redis:
    image: redis:7-alpine
    container_name: bella-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - bella-network

  nginx:
    image: nginx:alpine
    container_name: bella-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - bella-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  bella-network:
    driver: bridge
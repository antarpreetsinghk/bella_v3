# Bella V3 Production Environment Configuration
# Copy this file to production.env and fill in your values
# IMPORTANT: Keep this file secure and never commit to version control

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Generate with: openssl rand -hex 32
BELLA_API_KEY="REPLACE_WITH_64_CHARACTER_SECURE_API_KEY"

# Environment setting
APP_ENV="production"

# Database connection (PostgreSQL recommended for production)
DATABASE_URL="postgresql+asyncpg://bella_user:SECURE_PASSWORD@localhost:5432/bella_prod"

# =============================================================================
# EXTERNAL SERVICE CREDENTIALS
# =============================================================================

# OpenAI API Configuration
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY="sk-REPLACE_WITH_YOUR_OPENAI_API_KEY"

# Twilio Configuration
# Get from: https://console.twilio.com/
TWILIO_ACCOUNT_SID="AC_REPLACE_WITH_YOUR_ACCOUNT_SID"
TWILIO_AUTH_TOKEN="REPLACE_WITH_YOUR_AUTH_TOKEN"

# =============================================================================
# SESSION AND CACHING
# =============================================================================

# Redis for session storage (recommended for production)
REDIS_URL="redis://localhost:6379/0"

# =============================================================================
# ALERTING AND NOTIFICATIONS
# =============================================================================

# Slack Integration (Optional)
# Create webhook at: https://api.slack.com/apps → Your App → Incoming Webhooks
SLACK_WEBHOOK_URL="https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"

# Email Alerting (Optional)
# Use app-specific password for Gmail
SMTP_HOST="smtp.gmail.com"
SMTP_PORT="587"
SMTP_USER="alerts@yourcompany.com"
SMTP_PASSWORD="YOUR_APP_SPECIFIC_PASSWORD"
ALERT_EMAIL="oncall@yourcompany.com"

# =============================================================================
# AWS INTEGRATION (OPTIONAL)
# =============================================================================

# AWS Cost Explorer (Optional)
# Create IAM user with ce:GetCostAndUsage permission
AWS_ACCESS_KEY_ID="AKIA_YOUR_ACCESS_KEY_ID"
AWS_SECRET_ACCESS_KEY="YOUR_SECRET_ACCESS_KEY"
AWS_DEFAULT_REGION="us-east-1"

# =============================================================================
# PRODUCTION TUNING
# =============================================================================

# Gunicorn worker configuration
WORKERS="4"
MAX_REQUESTS="1000"
TIMEOUT="30"

# Rate limiting
API_RATE_LIMIT="1000"  # requests per hour
VOICE_RATE_LIMIT="100"  # concurrent calls

# Cost monitoring
MONTHLY_BUDGET="100.0"  # USD
COST_ALERT_THRESHOLD_1="80"  # Percent
COST_ALERT_THRESHOLD_2="90"  # Percent

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Enable security features in production
ENABLE_TWILIO_SIGNATURE_VALIDATION="true"
ENABLE_CORS_PROTECTION="true"
ENABLE_RATE_LIMITING="true"

# Allowed origins for CORS (optional)
ALLOWED_ORIGINS="https://bella.yourcompany.com,https://admin.yourcompany.com"

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Log level for production
LOG_LEVEL="INFO"

# External monitoring (optional)
EXTERNAL_MONITORING_URL="https://your-monitoring-service.com/webhook"
HEALTH_CHECK_INTERVAL="300"  # seconds

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup settings
BACKUP_RETENTION_DAYS="30"
BACKUP_LOCATION="/opt/bella/backups"

# S3 backup (optional)
S3_BACKUP_BUCKET="bella-prod-backups"
S3_BACKUP_REGION="us-east-1"

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Database connection pool
DB_POOL_SIZE="20"
DB_MAX_OVERFLOW="30"
DB_POOL_TIMEOUT="30"

# Redis connection pool
REDIS_POOL_SIZE="10"
REDIS_CONNECTION_TIMEOUT="5"

# Circuit breaker settings
OPENAI_CIRCUIT_FAILURE_THRESHOLD="5"
OPENAI_CIRCUIT_RECOVERY_TIMEOUT="60"
OPENAI_CIRCUIT_TIMEOUT="30"

# Cache settings
CACHE_TTL="3600"  # 1 hour
METRICS_RETENTION_HOURS="168"  # 1 week

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable features
ENABLE_COST_TRACKING="true"
ENABLE_BUSINESS_METRICS="true"
ENABLE_CIRCUIT_BREAKERS="true"
ENABLE_SLA_MONITORING="true"
ENABLE_ALERT_ESCALATION="true"

# Development features (disable in production)
ENABLE_DEBUG_LOGGING="false"
ENABLE_TEST_ENDPOINTS="false"
ENABLE_WEBHOOK_DEBUGGING="false"

# =============================================================================
# INSTRUCTIONS FOR SECURE DEPLOYMENT
# =============================================================================

# 1. Generate secure values:
#    - API Key: openssl rand -hex 32
#    - Database Password: openssl rand -base64 32
#    - Session Secret: openssl rand -hex 16

# 2. Set proper file permissions:
#    chmod 600 production.env
#    chown bella:bella production.env

# 3. Never commit this file to version control:
#    Add production.env to .gitignore

# 4. Use environment variable injection for containers:
#    docker run --env-file production.env bella:latest

# 5. Validate configuration before deployment:
#    python -c "from app.core.config import settings; print('Config valid')"
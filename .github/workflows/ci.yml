name: compose-smoke-test

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  smoke:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v3

      - name: Make CI .env (safe, minimal)
        run: |
          cat > .env << 'EOF'
          # ---- API ----
          APP_ENV=ci
          BELLA_API_KEY=ci-key-not-used
          LLM_ENABLED=false
          OPENAI_API_KEY=
          OPENAI_MODEL=gpt-4o-mini

          # ---- Postgres (compose expects these) ----
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=postgres
          POSTGRES_DB=bella

          # ---- DB URL used by the API ----
          DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/bella

          # ---- Twilio (not used in CI) ----
          TWILIO_ACCOUNT_SID=
          TWILIO_AUTH_TOKEN=
          TWILIO_PHONE_NUMBER=
          EOF
          echo "Created CI .env:"
          sed -n '1,12p' .env

      - name: Build containers
        run: docker compose build

      - name: Start services
        run: docker compose up -d

      - name: Show logs (early)
        run: |
          sleep 3
          docker compose ps
          docker compose logs --no-color --tail=100

      - name: Wait for API /healthz
        run: |
          set -e
          for i in $(seq 1 60); do
            if curl -fsS http://localhost:8000/healthz >/dev/null; then
              echo "API is up"
              exit 0
            fi
            echo "Waiting for API... ($i/60)"
            sleep 2
          done
          echo "API did not become ready in time"
          docker compose logs --no-color
          exit 1

      - name: Quick smoke tests
        run: |
          curl -fsS http://localhost:8000/healthz
          curl -fsS http://localhost:8000/readyz

      - name: Dump logs on failure
        if: failure()
        run: docker compose logs --no-color
